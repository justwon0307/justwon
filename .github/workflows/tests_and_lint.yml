name: JustWon CI

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - "justwon/**"
      - "justwon_server/**"
  push:
    branches:
      - main
    paths:
      - "justwon/**"
      - "justwon_server/**"

permissions:
  contents: read
  security-events: write
        
jobs:
  prep:
    runs-on: ubuntu-latest
    outputs:
      lcov-path: ${{ steps.install-lcov.outputs.lcov-path }}
    steps:
      - name: Install lcov
        id: install-lcov
        run: |
          sudo apt-get update
          sudo apt-get install -y lcov

  nextjs-tests-and-lint:
    runs-on: ubuntu-latest
    needs: prep
    defaults:
      run:
        working-directory: justwon

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Set up Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'
          cache-dependency-path: "justwon/yarn.lock"

      - name: Install dependencies
        run: yarn install --dev

      - name: Run tests and collect coverage
        run: |
          yarn test --coverage --watchAll=false
          cp coverage/lcov.info coverage.lcov

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-nextjs
          path: justwon/coverage.lcov

      - name: Run linter
        run: yarn lint --format @microsoft/eslint-formatter-sarif --output-file eslint-results.sarif

      - name: Upload linter results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: justwon/eslint-results.sarif
          wait-for-processing: true

  django-tests-and-lint:
    runs-on: ubuntu-latest
    needs: prep
    defaults:
      run:
        working-directory: justwon_server
    env:
      SECRET_KEY: "test"
      TAILSCALE_IP: "test"
      CLERK_SECRET_KEY: "test"
      CLERK_ISSUER: "test"
      CLERK_JWKS_URL: "test"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: 3.13.3

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev

      - name: Run tests and collect coverage
        run: |
          pipenv run coverage run manage.py test
          pipenv run coverage lcov
          pipenv run coverage xml
          sed -i "s|<source></source>|<source>justwon_server</source>|g" coverage.xml

      - name: Upload coverage artifact (lcov)
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-django
          path: justwon_server/coverage.lcov

      - name: Upload coverage artifact (xml)
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-django-xml
          path: justwon_server/coverage.xml

      - name: Run linters
        run: pipenv run sh -c 'DJANGO_SETTINGS_MODULE=justwon.settings.dev pylint --load-plugins pylint_django --rcfile=.pylintrc .'

  quality:
    runs-on: ubuntu-latest
    needs: [django-tests-and-lint, nextjs-tests-and-lint]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Set up Node.js 22 (for merging coverage)
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Download coverage artifact (Next.js)
        uses: actions/download-artifact@v4
        with:
          name: coverage-report-nextjs
          path: ./justwon

      - name: Download coverage artifact (Django-lcov)
        uses: actions/download-artifact@v4
        with:
          name: coverage-report-django
          path: ./justwon_server

      - name: Download coverage artifact (Django-xml)
        uses: actions/download-artifact@v4
        with:
          name: coverage-report-django-xml
          path: ./justwon_server

      - name: Merge coverage reports
        run: |
          npx lcov-result-merger "*/coverage.lcov" coverage.lcov \
          --prepend-source-files --prepend-path-fix "."

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2.2.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./coverage.lcov
